{"version":3,"sources":["Components/Calendar/Calendar.js","Components/DebouncedInput/DebouncedInput.js","Components/DatePicker/DatePicker.js","Components/StackChart/Axis.js","Components/StackChart/AxisWrapper.js","Components/StackChart/Line.js","Components/StackChart/StackChart.js","Components/StackChart/Bar.js","Components/StackChart/BarChart.js","Components/Page1.js","Components/Page2.js","App.js","serviceWorker.js","index.js"],"names":["language","ms0","ms1","ms2","ms3","ms4","ms5","ms6","ms7","ms8","ms9","ms10","ms11","d0","d1","d2","d3","d4","d5","d6","thisMonth","prevMonth","nextMonth","DEFAULT_CURRENT_DATE","Date","setDate","daysInMonth","month","year","getDate","Calendar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setCurrentDateFromProps","targetMonth","parseInt","assignedMonth","targetYear","assignedYear","isNaN","setState","currentDate","stringifyDay","date","concat","getFullYear","getMonth","_weekGenerator","startDate","daysOfMonth","prevDaysOfMonth","realDate","outmonth","isBeforeMonth","fullDate","available","inDuration","fromDuration","toDuration","_this$props","availableDate","durationDate","week","i","from","to","getTime","push","day","_prevMonth","newCurrentDate","state","setMonth","_nextMonth","_selectDayEvent","dateObj","selectedDateObj","onChange","_hoverDayEvent","onHover","today","nextProps","monthArray","firstDay","firstDayInFirstweek","getDay","recordDate","atWeek","Math","ceil","atDay","isToday","_this2","selectedDate","monthObj","_monthGenegrator","$month","map","$week","j","dateCx","classnames","cal-month-day","cal-day-weekend","cal-day-today","notAvailable","selected","wrapDateCx","cal-day-outmonth","react_default","a","createElement","className","key","onClick","onMouseEnter","x","y","width","height","viewBox","points","React","PureComponent","defaultProps","undefined","highlightDates","getPropsForInput","keys","reduce","accu","objectSpread","defineProperty","DebouncedInput","updateState","_ref","value","target","clearTimeout","debounceTimer","setTimeout","debounceMs","propsForInput","_this$props$className","id","assign","monthNames","DatePicker","getDateFormat","yyyy","toString","mm","dd","onDateChange","window","document","removeEventListener","handleDoucmentClickEvent","openCalendar","apply","arguments","e","ReactDOM","findDOMNode","refs","element","contains","classList","handleOpenCalendar","disabled","addEventListener","open","_this$props2","style","placeholder","calendarProps","objectWithoutProperties","DebouncedInput_DebouncedInput","type","calendar-wrap","show","Calendar_Calendar_Calendar","ref","Axis","update","root","ele","select","axisFn","modifier","transform","el","AxisWrapper","margin","children","actualHeight","xAxis","yAxis","xAxisModifier","yAxisModifier","left","top","Axis_Axis","Line","lineData","lineColorMapFn","drawLineFunction","strokeWidth","stroke","fill","d","formatTime","timeFormat","right","bottom","selectAll","attr","StackChart","xKey","data","yAxisTickFormat","pdata","toJS","actualWidth","sumY","acc","xFn","scaleTime","rangeRound","domain","extent","yFn","scaleLinear","max","toConsumableArray","range","xTicks","length","axisBottom","scale","ticks","tickSize","tickFormat","axisLeft","AxisWrapper_AxisWrapper","Line_Line","line","List","fromJS","areaColorMapFn","n","numeral","format","barWidth","colorMapFn","get","based","forEach","Bar_Line","DatePickerGroup","styled","div","_templateObject","LegendWrap","_templateObject2","Legend","_templateObject3","color","rawData","time_sec","ts","total_count","Number","imcompleted","Page1","_useState","useState","_useState2","slicedToArray","fromTime","setFromTime","_useState3","_useState4","toTime","setToTime","fromTimeTs","toTimeTs","chartData","filter","DatePicker_DatePicker_DatePicker","count","StackChart_StackChart_StackChart","BarChart_StackChart","Page2","AppWindow","App_templateObject","Container","App_templateObject2","process","tab","setTab","components","title","aria-current","Components_Page1","Components_Page2","Boolean","location","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6feafe4b.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nimport './Calendar.css';\n\nconst language = {\n  ms0: 'January',\n  ms1: 'February',\n  ms2: 'March',\n  ms3: 'April',\n  ms4: 'May',\n  ms5: 'June',\n  ms6: 'July',\n  ms7: 'August',\n  ms8: 'September',\n  ms9: 'October',\n  ms10: 'November',\n  ms11: 'December',\n  d0: 'S',\n  d1: 'M',\n  d2: 'T',\n  d3: 'W',\n  d4: 'T',\n  d5: 'F',\n  d6: 'S',\n  thisMonth: 'This month',\n  prevMonth: 'Prev',\n  nextMonth: 'Next'\n};\n\nconst DEFAULT_CURRENT_DATE = new Date();\nDEFAULT_CURRENT_DATE.setDate(1);\n\nconst getMonthFormatted = date => language[`ms${date.getMonth()}`];\n\nconst daysInMonth = (month, year) => new Date(year, month, 0).getDate();\n\nexport default class Calendar extends React.PureComponent {\n  // propTypes: {\n  //   assignedMonth: React.PropTypes.string,\n  //   assignedYear: React.PropTypes.string,\n  //   selectedDate: React.PropTypes.object,\n  //   availableDate: React.PropTypes.shape({\n  //     from: React.PropTypes.object,\n  //     // Date instance\n  //     // Date instance\n  //     to: React.PropTypes.object,\n  //   }),\n  //   durationDate: React.PropTypes.shape({\n  //     from: React.PropTypes.object,\n  //     // Date instance\n  //     // Date instance\n  //     to: React.PropTypes.object,\n  //   }),\n  //   onChange: React.PropTypes.func,\n  // }\n  static defaultProps = {\n    onChange: () => {},\n    onHover: () => {},\n    selectedDate: undefined,\n    highlightDates: []\n  };\n  constructor(props) {\n    super(props);\n    this.state = { currentDate: DEFAULT_CURRENT_DATE, today: new Date() };\n  }\n  componentWillMount() {\n    this.setCurrentDateFromProps(this.props);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.assignedYear !== this.props.assignedYear ||\n      nextProps.assignedMonth !== this.props.assignedMonth\n    ) {\n      this.setCurrentDateFromProps(nextProps);\n    }\n  }\n  setCurrentDateFromProps = props => {\n    const targetMonth = parseInt(props.assignedMonth, 10);\n    const targetYear = parseInt(props.assignedYear, 10);\n\n    if (\n      !isNaN(targetMonth) &&\n      !isNaN(targetYear) &&\n      targetMonth >= 0 &&\n      targetMonth < 13\n    ) {\n      this.setState({ currentDate: new Date(targetYear, targetMonth - 1, 1) });\n    }\n  };\n  stringifyDay = date =>\n    `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`;\n  // month between 1 ~ 12\n  _monthGenegrator(month, year) {\n    const monthArray = [];\n    const firstDay = new Date(year, month - 1, 1, 0, 0, 0, 0);\n    //  weekDay between 1 ~ 7 , 1 is Monday, 7 is Sunday\n    const firstDayInFirstweek = firstDay.getDay() > 0 ? firstDay.getDay() : 7;\n    const daysOfMonth = daysInMonth(month, year);\n    const prevDaysOfMonth = daysInMonth(month - 1, year);\n\n    let recordDate = 0;\n\n    // record which day obj already genegrate\n    // first week row\n    monthArray.push(\n      this._weekGenerator(\n        year,\n        month,\n        recordDate - firstDayInFirstweek,\n        daysOfMonth,\n        prevDaysOfMonth\n      )\n    );\n\n    recordDate = 7 - firstDayInFirstweek;\n    // loop for following week row\n    while (recordDate < daysOfMonth - 1) {\n      monthArray.push(\n        this._weekGenerator(year, month, recordDate, daysOfMonth)\n      );\n      recordDate += 7;\n    }\n\n    // set isToday\n    if (\n      this.state.currentDate.getMonth() === this.state.today.getMonth() &&\n      this.state.currentDate.getFullYear() === this.state.today.getFullYear()\n    ) {\n      const atWeek =\n        Math.ceil((this.state.today.getDate() + firstDayInFirstweek - 1) / 7) -\n        1;\n      const atDay = (this.state.today.getDate() + firstDayInFirstweek - 2) % 7;\n      monthArray[atWeek][atDay].isToday = true;\n    }\n    return monthArray;\n  }\n  // month between 1~12\n  _weekGenerator = (year, month, startDate, daysOfMonth, prevDaysOfMonth) => {\n    const { availableDate, durationDate } = this.props;\n\n    const week = [];\n    let realDate;\n    let outmonth;\n    let isBeforeMonth;\n    let fullDate;\n    let available;\n    let inDuration;\n    let fromDuration, toDuration;\n\n    for (let i = 1; i <= 7; i++) {\n      outmonth = false;\n      available = true;\n      inDuration = false;\n      fromDuration = false;\n      toDuration = false;\n\n      if (startDate + i < 0) {\n        realDate = prevDaysOfMonth + startDate + i + 1;\n        outmonth = true;\n        isBeforeMonth = true;\n      } else if (startDate + i + 1 > daysOfMonth) {\n        realDate = startDate + i - daysOfMonth + 1;\n        outmonth = true;\n        isBeforeMonth = false;\n      } else {\n        realDate = startDate + i + 1;\n        isBeforeMonth = false;\n      }\n\n      if (outmonth && isBeforeMonth) {\n        fullDate = new Date(year, month - 2, realDate);\n      } else if (outmonth && !isBeforeMonth) {\n        fullDate = new Date(year, month, realDate);\n      } else {\n        fullDate = new Date(year, month - 1, realDate);\n      }\n\n      // is available ?\n      if (\n        availableDate &&\n        availableDate.from &&\n        fullDate < availableDate.from\n      ) {\n        available = false;\n      }\n\n      if (availableDate && availableDate.to && fullDate > availableDate.to) {\n        available = false;\n      }\n\n      if (durationDate && durationDate.from && durationDate.to) {\n        if (\n          fullDate.getTime() > durationDate.from.getTime() &&\n          fullDate.getTime() < durationDate.to.getTime()\n        ) {\n          inDuration = true;\n        }\n        if (\n          this.stringifyDay(fullDate) === this.stringifyDay(durationDate.from)\n        ) {\n          fromDuration = true;\n        }\n        if (\n          this.stringifyDay(fullDate) === this.stringifyDay(durationDate.to)\n        ) {\n          toDuration = true;\n        }\n      }\n\n      week.push({\n        outmonth,\n        day: i,\n        date: realDate,\n        available,\n        fullDate,\n        inDuration,\n        fromDuration,\n        toDuration\n      });\n    }\n    return week;\n  };\n  _prevMonth = () => {\n    const newCurrentDate = new Date(this.state.currentDate);\n    newCurrentDate.setMonth(this.state.currentDate.getMonth() - 1, 1);\n    this.setState({ currentDate: newCurrentDate });\n  };\n  _nextMonth = () => {\n    const newCurrentDate = new Date(this.state.currentDate);\n    newCurrentDate.setMonth(this.state.currentDate.getMonth() + 1, 1);\n    this.setState({ currentDate: newCurrentDate });\n  };\n  _selectDayEvent = dateObj => () => {\n    const selectedDateObj = {\n      year: this.state.currentDate.getFullYear(),\n      month: this.state.currentDate.getMonth(),\n      day: dateObj.date,\n      fullDate: dateObj.fullDate\n    };\n    this.props.onChange(selectedDateObj);\n  };\n  _hoverDayEvent = dateObj => () => {\n    if (dateObj) {\n      const selectedDateObj = {\n        year: this.state.currentDate.getFullYear(),\n        month: this.state.currentDate.getMonth(),\n        day: dateObj.date,\n        fullDate: dateObj.fullDate\n      };\n      this.props.onHover(selectedDateObj);\n    } else {\n      this.props.onHover(null);\n    }\n  };\n  render() {\n    const { selectedDate } = this.props;\n    const monthObj = this._monthGenegrator(\n      this.state.currentDate.getMonth() + 1,\n      this.state.currentDate.getFullYear()\n    );\n\n    const selectedDateObj = selectedDate\n      ? {\n          day: selectedDate.getDate(),\n          month: selectedDate.getMonth(),\n          year: selectedDate.getFullYear()\n        }\n      : null;\n\n    const $month = monthObj.map((week, i) => {\n      const $week = week.map((day, j) => {\n        const dateCx = classnames({\n          'cal-month-day': true,\n          'cal-day-weekend': day.day === 6 || day.day === 7,\n          'cal-day-today': day.isToday,\n          notAvailable: !day.available,\n          selected:\n            selectedDateObj &&\n            selectedDateObj.day === day.date &&\n            selectedDateObj.month === this.state.currentDate.getMonth() &&\n            selectedDateObj.year === this.state.currentDate.getFullYear() &&\n            !day.outmonth\n        });\n        const wrapDateCx = classnames('cal-span', 'cal-cell', {\n          'cal-day-outmonth': day.outmonth,\n          inDuration: day.inDuration,\n          fromDuration: day.fromDuration,\n          toDuration: day.toDuration\n        });\n        return (\n          <div className={wrapDateCx} key={j}>\n            <div\n              className={dateCx}\n              onClick={this._selectDayEvent(day)}\n              onMouseEnter={this._hoverDayEvent(day)}\n            >\n              {day.date}\n            </div>\n          </div>\n        );\n      });\n      return (\n        <div className=\"cal-row-fluid cal-week\" key={i}>\n          {$week}\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"component-calendar\">\n        <div className=\"nav-btn prev\" onClick={this._prevMonth}>\n          <svg\n            className=\"arrow-left arrow-icon\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"14px\"\n            height=\"14px\"\n            viewBox=\"0 0 199.404 199.404\"\n          >\n            <polygon points=\"135.412,0 35.709,99.702 135.412,199.404 163.695,171.119 92.277,99.702 163.695,28.285\" />\n          </svg>\n        </div>\n        <div className=\"calendar-table\">\n          <div className=\"calendar-header row\">\n            <div className=\"date\">\n              {getMonthFormatted(this.state.currentDate)}{' '}\n              {this.state.currentDate.getFullYear()}\n            </div>\n          </div>\n          <div className=\"cal-row-fluid cal-row-head\">\n            <div className=\"cal-span\">{language.d1}</div>\n            <div className=\"cal-span\">{language.d2}</div>\n            <div className=\"cal-span\">{language.d3}</div>\n            <div className=\"cal-span\">{language.d4}</div>\n            <div className=\"cal-span\">{language.d5}</div>\n            <div className=\"cal-span\">{language.d6}</div>\n            <div className=\"cal-span\">{language.d0}</div>\n          </div>\n          <div className=\"cal-month-box\">{$month}</div>\n        </div>\n        <div className=\"nav-btn next\" onClick={this._nextMonth}>\n          <svg\n            className=\"arrow-right arrow-icon\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"14px\"\n            height=\"14px\"\n            viewBox=\"0 0 199.404 199.404\"\n          >\n            <polygon points=\"63.993,199.404 163.695,99.702 63.993,0 35.709,28.285 107.127,99.702 35.709,171.119\" />\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport './Input.css';\n\nconst getPropsForInput = props =>\n  Object.keys(props).reduce((accu, key) => {\n    if (key === 'debounceMs') {\n      return accu;\n    }\n    return { ...accu, [key]: props[key] };\n  }, {});\n\n// debounce input\nexport default class DebouncedInput extends React.PureComponent {\n  static defaultProps = {\n    debounceMs: 250,\n    id: null,\n    value: '',\n    onChange: () => {}\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.debounceTimer = null;\n    this.propsForInput = getPropsForInput(props);\n    this.state = {\n      value: this.props.value\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.propsForInput = getPropsForInput(nextProps);\n    this.setState({\n      value: nextProps.value\n    });\n  }\n\n  updateState = ({ target: { value } }) => {\n    this.setState({ value });\n\n    clearTimeout(this.debounceTimer);\n    this.debounceTimer = setTimeout(() => {\n      this.props.onChange({ target: { value } });\n    }, this.props.debounceMs);\n  };\n\n  render() {\n    const { className = '', id } = this.props;\n\n    return (\n      <input\n        {...this.propsForInput}\n        className={`input ${className}`}\n        id={id}\n        onChange={this.updateState}\n        value={this.state.value || ''}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport classnames from 'classnames';\n\nimport Calendar from '../Calendar/Calendar';\nimport DebouncedInput from '../DebouncedInput/DebouncedInput';\n\nimport './DatePicker.css';\n\nconst monthNames = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec'\n];\n\nexport default class DatePicker extends React.PureComponent {\n  static defaultProps = {\n    disabled: false,\n    placeholder: 'Please select date',\n    selectedDate: null,\n    style: {},\n    className: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { openCalendar: false };\n  }\n\n  componentWillUnmount() {\n    window.document.removeEventListener('click', this.handleDoucmentClickEvent);\n  }\n\n  getDateFormat = date => {\n    const yyyy = date.getFullYear().toString();\n    const mm = date.getMonth();\n    const dd = date.getDate().toString();\n    return `${monthNames[mm]} ${dd[1] ? dd : `0${dd[0]}`}, ${yyyy}`;\n  };\n\n  onDateChange = (...args) => {\n    window.document.removeEventListener('click', this.handleDoucmentClickEvent);\n    this.setState({ openCalendar: false });\n    if (this.props.onChange) {\n      this.props.onChange(...args);\n    }\n  };\n\n  handleDoucmentClickEvent = e => {\n    // https://facebook.github.io/react/blog/#dom-node-refs\n    const contains = ReactDOM.findDOMNode(this.refs.element).contains(e.target);\n    // click dp-month or dp-year will misjudget...\n    if (!contains && !e.target.classList.contains('mf-calendar')) {\n      window.document.removeEventListener(\n        'click',\n        this.handleDoucmentClickEvent\n      );\n      this.setState({ openCalendar: false });\n    }\n  };\n\n  handleOpenCalendar = () => {\n    if (!this.props.disabled) {\n      this.setState({ openCalendar: true });\n      window.document.addEventListener('click', this.handleDoucmentClickEvent);\n    }\n  };\n\n  open = () => {\n    this.handleOpenCalendar();\n  };\n\n  render() {\n    const {\n      disabled,\n      className,\n      style,\n      placeholder,\n      selectedDate,\n      ...calendarProps\n    } = this.props;\n\n    return (\n      <div\n        className={classnames('component-datepick', className, { disabled })}\n        style={style}\n      >\n        <div onClick={this.handleOpenCalendar}>\n          <DebouncedInput\n            disabled={disabled}\n            value={selectedDate ? this.getDateFormat(selectedDate) : ''}\n            type=\"text\"\n            placeholder={placeholder}\n          />\n        </div>\n        <div\n          className={classnames({\n            'calendar-wrap': true,\n            show: this.state.openCalendar\n          })}\n        >\n          <Calendar\n            {...calendarProps}\n            selectedDate={selectedDate}\n            ref=\"element\"\n            onChange={this.onDateChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { select } from 'd3-selection';\n\nexport default class Axis extends React.PureComponent {\n  static defaultProps = {\n    axisFn: () => {},\n    modifier: () => {},\n    transform: '',\n  };\n\n  componentDidMount() {\n    this.update(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.update(nextProps);\n  }\n\n  update = props => {\n    if (this.root) {\n      const ele = select(this.root).call(props.axisFn);\n      props.modifier(ele);\n    }\n  };\n\n  render() {\n    const { props } = this;\n    return (\n      <g\n        className=\"axis\"\n        transform={props.transform}\n        ref={el => {\n          this.root = el;\n        }}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport Axis from './Axis';\n\nexport default class AxisWrapper extends React.PureComponent {\n  static defaultProps = {\n    margin: {},\n    actualHeight: 1000,\n    xAxis: () => {},\n    yAxis: () => {},\n    xAxisModifier: () => {},\n    yAxisModifier: () => {},\n  };\n\n  render() {\n    const { props } = this;\n    const {\n      margin,\n      children,\n      actualHeight,\n      xAxis,\n      yAxis,\n      xAxisModifier,\n      yAxisModifier,\n    } = props;\n\n    return (\n      <g transform={`translate(${margin.left}, ${margin.top})`}>\n        {children}\n        <Axis\n          className=\"x\"\n          transform={`translate(0,${actualHeight})`}\n          axisFn={xAxis}\n          modifier={xAxisModifier}\n        />\n        <Axis className=\"y\" axisFn={yAxis} modifier={yAxisModifier} />\n      </g>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class Line extends React.PureComponent {\n  static defaultProps = {\n    keys: [],\n    lineData: [],\n    strokeWidth: 2,\n    lineColorMapFn: [],\n    drawLineFunction: () => {}\n  };\n\n  render() {\n    const { props } = this;\n    const {\n      keys,\n      lineData,\n      lineColorMapFn,\n      drawLineFunction,\n      strokeWidth\n    } = props;\n    return (\n      <g className=\"lines-layer\">\n        {keys.map((key, i) => (\n          <path\n            key={key}\n            stroke={lineColorMapFn[i]}\n            strokeWidth={strokeWidth}\n            fill=\"transparent\"\n            d={drawLineFunction(key)(lineData)}\n          />\n        ))}\n      </g>\n    );\n  }\n}\n","import React from 'react';\nimport numeral from 'numeral';\nimport { fromJS, List } from 'immutable';\nimport { timeFormat } from 'd3-time-format';\nimport { extent } from 'd3-array';\nimport { scaleTime, scaleLinear } from 'd3-scale';\n// import { line, stack, area } from 'd3-shape';\nimport { line } from 'd3-shape';\nimport { axisBottom, axisLeft } from 'd3-axis';\n\nimport AxisWrapper from './AxisWrapper';\nimport Line from './Line';\n\nimport './StackChart.css';\n\nconst formatTime = timeFormat('%m/%d %I:%M');\n\nconst margin = { top: 10, right: 30, bottom: 40, left: 60 };\n\nconst xAxisModifier = ele => {\n  ele.selectAll('text').attr('dy', '20px');\n};\n\nconst yAxisModifier = ele => {\n  ele.selectAll('text').attr('dx', '-5px');\n};\n\nconst yAxisTickFormatDefault = n => numeral(n).format('0a');\n\nexport default class StackChart extends React.PureComponent {\n  static defaultProps = {\n    width: 1000,\n    height: 200,\n    xKey: 'x',\n    keys: List(),\n    data: fromJS([[]]),\n    lineColorMapFn: List(),\n    areaColorMapFn: List(),\n    yAxisTickFormat: yAxisTickFormatDefault\n  };\n\n  render() {\n    const { props } = this;\n    const {\n      xKey,\n      keys,\n      data,\n      lineColorMapFn,\n      yAxisTickFormat,\n      width,\n      height\n    } = props;\n\n    const pdata = data.toJS();\n\n    const actualWidth = width - margin.left - margin.right;\n    const actualHeight = height - margin.top - margin.bottom;\n\n    const sumY = pdata.map(d =>\n      keys.reduce((acc, key) => (d[key] || 0) + acc, 0)\n    );\n\n    const xFn = scaleTime()\n      .rangeRound([0, actualWidth])\n      .domain(extent(pdata, d => d[xKey]));\n\n    const yFn = scaleLinear()\n      .domain([0, Math.max(...sumY) * 1.618])\n      .range([actualHeight, 0]);\n\n    let xTicks = pdata.length;\n    if (xTicks > 10) xTicks = 10;\n\n    const xAxis = axisBottom()\n      .scale(xFn)\n      .ticks(xTicks)\n      .tickSize(0)\n      .tickFormat(formatTime);\n\n    const yAxis = axisLeft()\n      .scale(yFn)\n      .ticks(4)\n      .tickFormat(yAxisTickFormat)\n      .tickSize(-actualWidth);\n\n    // const stackFn = stack().keys(keys.toJS());\n    // const stackData = stackFn(pdata);\n\n    const drawLineFunction = key =>\n      line()\n        .x(d => xFn(d[xKey]))\n        .y(d => yFn(d[key]));\n\n    // const drawAreaFunction = area()\n    //   .x(d => xFn(d.data[xKey]))\n    //   .y0(d => yFn(d[0] || 0))\n    //   .y1(d => yFn(d[0] + (d[1] || 0)));\n\n    return (\n      <div className=\"component-stack-chart component-chart\">\n        <svg width={width} height={height}>\n          <AxisWrapper\n            margin={margin}\n            actualHeight={actualHeight}\n            xAxis={xAxis}\n            yAxis={yAxis}\n            xAxisModifier={xAxisModifier}\n            yAxisModifier={yAxisModifier}\n          >\n            <Line\n              keys={keys}\n              lineData={pdata}\n              lineColorMapFn={lineColorMapFn.toJS()}\n              drawLineFunction={drawLineFunction}\n            />\n            {/* <Area\n              stackData={stackData}\n              areaColorMapFn={areaColorMapFn.toJS()}\n              drawAreaFunction={drawAreaFunction}\n            /> */}\n          </AxisWrapper>\n        </svg>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { List } from 'immutable';\n\nexport default class Line extends React.PureComponent {\n  static defaultProps = {\n    barWidth: 4,\n    xFn: () => {},\n    yFn: () => {},\n    keys: [],\n    data: List([]),\n    colorMapFn: List([])\n  };\n\n  render() {\n    const { props } = this;\n    const { barWidth, xFn, yFn, keys, data, colorMapFn } = props;\n    let width = barWidth < 4 ? 4 : barWidth;\n\n    return (\n      <g className=\"bar-layer\">\n        {data.map((d, i) => {\n          return (\n            <g key={i}>\n              {keys.map((key, j) => (\n                <rect\n                  x={xFn(d) + 1}\n                  y={yFn(d.y[key] + d[key])}\n                  width={(width - 1) / 2}\n                  height={yFn(0) - yFn(d[key])}\n                  fill={colorMapFn.get(j)}\n                />\n              ))}\n            </g>\n          );\n        })}\n        {/* {keys.map((key, i) => (\n          <rect\n            key={key}\n            // stroke={lineColorMapFn[i]}\n            // strokeWidth={strokeWidth}\n            // fill={ColorMapFn[i]}\n          />\n        ))} */}\n      </g>\n    );\n  }\n}\n","import React from 'react';\nimport numeral from 'numeral';\nimport { fromJS, List } from 'immutable';\nimport { timeFormat } from 'd3-time-format';\nimport { extent } from 'd3-array';\nimport { scaleTime, scaleLinear } from 'd3-scale';\nimport { axisBottom, axisLeft } from 'd3-axis';\n\nimport AxisWrapper from './AxisWrapper';\nimport Bar from './Bar';\n\nconst formatTime = timeFormat('%m/%d %I:%M');\n\nconst margin = { top: 10, right: 30, bottom: 40, left: 60 };\n\nconst xAxisModifier = ele => {\n  ele.selectAll('text').attr('dy', '20px');\n};\n\nconst yAxisModifier = ele => {\n  ele.selectAll('text').attr('dx', '-5px');\n};\n\nconst yAxisTickFormatDefault = n => numeral(n).format('0a');\n\nexport default class StackChart extends React.PureComponent {\n  static defaultProps = {\n    width: 1000,\n    height: 200,\n    xKey: 'x',\n    keys: List(),\n    data: fromJS([[]]),\n    colorMapFn: List(),\n    yAxisTickFormat: yAxisTickFormatDefault\n  };\n\n  render() {\n    const { props } = this;\n    const {\n      xKey,\n      keys,\n      data,\n      yAxisTickFormat,\n      width,\n      height,\n      colorMapFn\n    } = props;\n\n    let pdata = data.toJS();\n\n    pdata = pdata.map(d => {\n      d.y = {};\n      let based = 0;\n      keys.forEach(key => {\n        d.y[key] = based;\n        based += d[key];\n      });\n      return d;\n    });\n    // console.log(pdata.map(d => d[xKey]));\n\n    const actualWidth = width - margin.left - margin.right;\n    const actualHeight = height - margin.top - margin.bottom;\n\n    const sumY = pdata.map(d =>\n      keys.reduce((acc, key) => (d[key] || 0) + acc, 0)\n    );\n\n    const xFn = scaleTime()\n      .rangeRound([0, actualWidth])\n      .domain(extent(pdata, d => d[xKey]));\n\n    const yFn = scaleLinear()\n      .domain([0, Math.max(...sumY) * 1.618])\n      .range([actualHeight, 0]);\n\n    let xTicks = pdata.length;\n    if (xTicks > 10) xTicks = 10;\n\n    const xAxis = axisBottom()\n      .scale(xFn)\n      .ticks(4)\n      .tickSize(0)\n      .tickFormat(formatTime);\n\n    const yAxis = axisLeft()\n      .scale(yFn)\n      .ticks(4)\n      .tickFormat(yAxisTickFormat)\n      .tickSize(-actualWidth);\n\n    const getX = d => xFn(d[xKey]);\n    const barWidth = actualWidth / pdata.length;\n    // console.log(yFn(0), yFn(10));\n\n    return (\n      <div className=\"component-stack-chart component-chart\">\n        <svg width={width} height={height}>\n          <AxisWrapper\n            margin={margin}\n            actualHeight={actualHeight}\n            xAxis={xAxis}\n            yAxis={yAxis}\n            xAxisModifier={xAxisModifier}\n            yAxisModifier={yAxisModifier}\n          >\n            <Bar\n              keys={keys}\n              data={pdata}\n              barWidth={barWidth}\n              colorMapFn={colorMapFn}\n              xFn={getX}\n              yFn={yFn}\n            />\n          </AxisWrapper>\n        </svg>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { fromJS } from 'immutable';\nimport styled from 'styled-components';\n\nimport DatePicker from './DatePicker/DatePicker';\nimport StackChart from './StackChart/StackChart';\nimport BarChart from './StackChart/BarChart';\n\nimport rawData from '../data/valid-invalid.json';\n\nconst DatePickerGroup = styled.div`\n  margin: 20px auto;\n  display: flex;\n  width: 640px;\n`;\n\nconst LegendWrap = styled.div`\n  margin: 20px;\n`;\nconst Legend = styled.div`\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  margin-left: 20px;\n  background: ${props => props.color};\n`;\nconst data = fromJS(\n  rawData.map(d => {\n    d.x = new Date(d.time_sec);\n    d.ts = d.x.getTime();\n    d.total_count = Number(d.total_count);\n    d.imcompleted = Number(d.imcompleted);\n    return d;\n  })\n);\n\nconst Page1 = () => {\n  let [fromTime, setFromTime] = useState(new Date('2018-09-25'));\n  let [toTime, setToTime] = useState(new Date('2018-09-26'));\n  // console.log(fromTime);\n  const fromTimeTs = fromTime.getTime();\n  const toTimeTs = toTime.getTime();\n  const chartData = data.filter(d => {\n    return d.get('ts') > fromTimeTs && d.get('ts') < toTimeTs;\n  });\n\n  return (\n    <div>\n      <DatePickerGroup>\n        <DatePicker\n          assignedYear=\"2018\"\n          assignedMonth=\"09\"\n          selectedDate={fromTime}\n          onChange={e => setFromTime(e.fullDate)}\n        />\n        <DatePicker\n          assignedYear=\"2018\"\n          assignedMonth=\"10\"\n          selectedDate={toTime}\n          onChange={e => setToTime(e.fullDate)}\n        />\n      </DatePickerGroup>\n      {chartData.count() > 0 ? (\n        <div>\n          <StackChart\n            keys={fromJS(['total_count', 'imcompleted'])}\n            lineColorMapFn={fromJS(['#68b5f5', '#0df'])}\n            data={chartData}\n          />\n          <BarChart\n            keys={fromJS(['total_count', 'imcompleted'])}\n            colorMapFn={fromJS(['#68b5f5', '#0df'])}\n            data={chartData}\n          />\n        </div>\n      ) : (\n        <div>No Data is available</div>\n      )}\n\n      <LegendWrap>\n        <Legend color=\"#68b5f5\" /> : total_count\n        <Legend color=\"#0df\" /> : imcompleted\n      </LegendWrap>\n    </div>\n  );\n};\n\nexport default Page1;\n","import React, { useState } from 'react';\n\nimport styled from 'styled-components';\n\nconst Page2 = () => {\n  return <div>Page2</div>;\n};\n\nexport default Page2;\n","import React, { useState } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Header, HeaderNavigation, Footer } from 'rivet-react';\nimport Page1 from './Components/Page1';\nimport Page2 from './Components/Page2';\n\nimport styled from 'styled-components';\n\nimport './App.css';\n\nconst AppWindow = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Container = styled.div`\n  flex: 1;\n`;\n\nconst App = () => {\n  const [tab, setTab] = useState('tab1');\n\n  return (\n    <AppWindow>\n      <Header title=\"Deep Sentinel\">\n        <HeaderNavigation>\n          {tab === 'tab1' ? (\n            <a aria-current=\"Page1\" onClick={() => setTab('tab1')}>\n              Page 1\n            </a>\n          ) : (\n            <a onClick={() => setTab('tab1')}>Page 1</a>\n          )}\n          {tab === 'tab2' ? (\n            <a aria-current=\"Page2\" onClick={() => setTab('tab2')}>\n              Page 2\n            </a>\n          ) : (\n            <a onClick={() => setTab('tab2')}>Page 2</a>\n          )}\n        </HeaderNavigation>\n      </Header>\n      <Container>\n        {tab === 'tab1' ? <Page1 /> : null}\n        {tab === 'tab2' ? <Page2 /> : null}\n      </Container>\n      <Footer />\n    </AppWindow>\n  );\n};\n\nexport default (process.env.NODE_ENV === 'development'\n  ? hot(module)(App)\n  : App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'rivet-uits/css/rivet.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}